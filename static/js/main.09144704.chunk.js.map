{"version":3,"sources":["Front.js","Fault.js","Fault2.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Front","state","urlAHU","selected","handleContent","selectedItem","setState","className","Container","Row","Col","xs","src","alt","style","color","Nav","fill","variant","defaultActiveKey","onSelect","selectedKey","Item","Link","eventKey","selectedPair","this","Component","Page","dataType","handleSpan","fluid","Image","props","thumbnail","Card","bg","Header","Body","Text","rounded","OverlayTrigger","trigger","placement","overlay","Popover","id","width","Title","as","Content","Button","Jumbotron","height","Dropdown","Toggle","Menu","href","to","annotations","Highcharts","accessibility","demoChart","title","text","yAxis","xAxis","labels","format","rangeDescription","plotOptions","series","label","connectorAllowed","pointStart","labelOptions","backgroundColor","verticalAlign","y","point","x","name","data","Fault","options","Fault2","chartOptions","users","isLoading","handleClickRand1","handleClickRand2","handleClickDefault","handleClickLoad","array1","array2","map","user","push","parseFloat","address","geo","lng","lat","fetch","then","res","json","onClick","key","App","basename","process","exact","path","component","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.09144704.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Front.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Nav from 'react-bootstrap/Nav'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Image from 'react-bootstrap/Image'\nimport Overlay from 'react-bootstrap/Overlay'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport Popover from 'react-bootstrap/Popover'\nimport PopoverContent from 'react-bootstrap/PopoverContent'\nimport PopoverTitle from 'react-bootstrap/PopoverTitle'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nclass Front extends Component {\n  state = {\n    urlAHU: \"https://d3i71xaburhd42.cloudfront.net/8fbd9f2d6e5afe43e0cd5597f7f410728474b872/3-Figure1-1.png\",\n    selected: \"SAT\",\n  }\n\n  handleContent = selectedItem => {\n    this.setState(\n      {selected: selectedItem},\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"Front\">\n        <header className=\"Front-header\">\n          <Container>\n            <Row>\n              <Col xs={2}>\n                <img src=\"https://tignis.com/wp-content/uploads/2018/08/tignis-logo.png\" className=\"App-logo\" alt=\"logo\" />\n              </Col>\n              <Col xs={8}>\n                <p style={{color: \"grey\"}}>\n                 WELCOME TO<br/>\n                 FAULT DETECTION SYSTEM\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n\n        <Nav\n          fill variant=\"pills\" defaultActiveKey=\"SAT\"\n          onSelect={(selectedKey) => this.handleContent(selectedKey)}\n        >\n          <Nav.Item>\n            <Nav.Link eventKey=\"SAT\"><strong>SAT</strong></Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"MAT\"><strong>MAT</strong></Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"LAT\"><strong>LAT</strong></Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <Page selectedPair={this.state} />\n      </div>\n    );\n  }\n}\n\nclass Page extends Component {\n  state = {\n    dataType: \"past week\"\n  }\n\n  handleSpan = selectedItem => {\n    this.setState(\n      {dataType: selectedItem},\n    )\n  }\n\n  render() {\n    return(\n      <div>\n        <Container fluid>\n          <Row>\n            <Col xs={8}>\n              <Image\n                src={this.props.selectedPair.urlAHU}\n                fluid\n                thumbnail\n              />\n            </Col>\n            <Col xs={4}>\n              <Card bg=\"Light\">\n                <Card.Header>\n                  <Nav\n                    variant=\"tabs\" defaultActiveKey=\"past week\"\n                    onSelect={(selectedKey) => this.handleSpan(selectedKey)}\n                  >\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"past week\">PW</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"past month\">PM</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"past year\">PY</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Text>\n                    A plot of <strong>{this.state.dataType}</strong><br/>\n                    The datatype is <em>{this.props.selectedPair.selected}</em>\n                  </Card.Text>\n                  <Image\n                    src=\"https://os.alipayobjects.com/rmsportal/VVPAIRTNYwbbZut.jpg\"\n                    fluid\n                    rounded\n                  />\n\n                  \n                  <OverlayTrigger\n                    trigger=\"click\"\n                    placement=\"left\"\n                    overlay=\n                      <Popover id=\"popover-test\" style={{width:\"100rem\"}}>\n                        <Popover.Title as=\"h3\">Detailed version</Popover.Title>\n                        <Popover.Content>\n                          <Image\n                            src=\"https://os.alipayobjects.com/rmsportal/VVPAIRTNYwbbZut.jpg\"\n                            fluid\n                            rounded\n                          />\n                        </Popover.Content>\n                      </Popover>\n                  >\n                    <Button variant=\"secondary\">See more</Button>\n                  </OverlayTrigger>\n                </Card.Body>\n              </Card>\n              <Jumbotron fluid style={{ height: \"9.5rem\"}}>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n                    Faults\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">\n                      <Link to=\"/fault\">4pm - Economizer</Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">\n                      <Link to=\"/fault2\">9am - Schedule</Link>\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Some more</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                    Optimizations\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Optimization 1</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Optimization 2</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Optimization 3</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Optimization 4</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Optimization 5</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Optimization 6</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n\n}\n\nexport default Front;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Fault.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Highcharts from 'highcharts'\nimport annotations from 'highcharts/modules/annotations'\nimport accessibility from 'highcharts/modules/accessibility'\nimport HighChartsReact from 'highcharts-react-official'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nannotations(Highcharts)\naccessibility(Highcharts)\n\nconst demoChart = {\n  title: {\n      text: 'Analysis for fault #1'\n  },\n\n  yAxis: {\n    title: {\n      text: 'Temperature'\n    }\n  },\n\n  xAxis: {\n    title: {\n      text: 'Time stamp'\n    },\n    labels: {\n      format: '{value}:00'\n    },\n    accessibility: {\n      rangeDescription: 'Range: 6 to 22'\n    }\n  },\n\n  plotOptions: {\n    series: {\n      label: {\n        connectorAllowed: false\n      },\n      pointStart: 6\n    }\n  },\n\n  annotations: [{\n    labelOptions: {\n      backgroundColor: 'rgba(255,200,200,0.5)',\n      verticalAlign: 'top',\n      y: 15\n    },\n    labels: [{\n      point: {\n        xAxis: 0,\n        yAxis: 0,\n        x: 10,\n        y: 80\n      },\n      text: 'Warning: economizer on'\n    }]\n  }],\n\n  series: [{\n    name: 'OSAT',\n    data: [60, 61, 63, 70, 80, 74, 73, 73, 74, 72, 70, 68, 65, 63, 62, 61, 60]\n  }, {\n    name: 'RAT',\n    data: [65, 66, 67, 72, 75, 75, 75, 76, 77, 76, 75, 73, 71, 69, 68, 67, 66]\n  }]\n}\n\nclass Fault extends Component {\n  render() {\n    return(\n      <div>\n        <Container fluid>\n          <Row>\n            <Col xs={8}>\n              <HighChartsReact Highcharts='highcharts' options={demoChart} />\n            </Col>\n            <Col xs={4}>\n              <Card bg=\"Light\">\n                <Card.Header>\n                  Highlighting\n                </Card.Header>\n                <Card.Body>\n                  <Button variant='secondary'>Line 1</Button>\n                  <Button variant='secondary'>Line 2</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to='/'>Home</Link>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n\n }\n\n export default Fault;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Fault.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Highcharts from 'highcharts'\nimport annotations from 'highcharts/modules/annotations'\nimport accessibility from 'highcharts/modules/accessibility'\nimport HighChartsReact from 'highcharts-react-official'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\naccessibility(Highcharts)\n\nclass Fault2 extends Component {\n  state = {\n    chartOptions: {\n      title: {\n        text: 'Analysis for fault #2'\n      },\n\n      yAxis: {\n        title: {\n          text: 'Valve status/%'\n        }\n      },\n\n      xAxis: {\n        title: {\n          text: 'Time stamp'\n        },\n        labels: {\n          format: '{value}:00'\n        },\n        accessibility: {\n          rangeDescription: 'Range: 6 to 22'\n        }\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false\n          },\n          pointStart: 6\n        }\n      },\n\n      series: [{\n        name: 'Scheduled valve status',\n        data: [2, 3, 3, 3, 4, 5, 6, 5, 5, 3]\n      }, {\n        name: 'Actual status',\n        data: [3, 3, 4, 5, 7, 8, 10, 12, 7, 5]\n      }]\n    },\n\n    users: [],\n    isLoading: true\n  }\n\n  async componentDidMount() {\n    await fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          users: json,\n        })\n      });\n  }\n\n  handleClickRand1 = () => {\n    this.setState(\n      {chartOptions: {series: [{\n        name: 'Scheduled valve status',\n        data: [10, 3, 3, 3, 4, 5, 6, 5, 5, 3]\n      }, {\n        name: 'Actual status',\n        data: [3, 3, 4, 5, 7, 8, 10, 12, 7, 5]\n      }]}\n      }\n    )\n  }\n\n  handleClickRand2 = () => {\n    this.setState(\n      {chartOptions: {series: [{\n        name: 'Scheduled valve status',\n        data: [2, 3, 3, 3, 4, 5, 6, 5, 5, 3]\n      }, {\n        name: 'Actual status',\n        data: [12, 7, 4, 5, 7, 8, 10, 12, 7, 5]\n      }]}\n      }\n    )\n  }\n\n  handleClickDefault = () => {\n    this.setState(\n      {chartOptions: {series: [{\n        name: 'Scheduled valve status',\n        data: [2, 3, 3, 3, 4, 5, 6, 5, 5, 3]\n      }, {\n        name: 'Actual status',\n        data: [3, 3, 4, 5, 7, 8, 10, 12, 7, 5]\n      }]},\n      isLoading: true\n      }\n    )\n  }\n\n  handleClickLoad = () => {\n    const array1 = [];\n    const array2 = [];\n\n    this.state.users.map(user => {\n      array1.push(parseFloat(user.address.geo.lng))\n      array2.push(parseFloat(user.address.geo.lat))\n    })\n\n    this.setState(\n      {chartOptions: {series: [{\n        name: 'Scheduled valve status',\n        data: array1\n      }, {\n        name: 'Actual status',\n        data: array2\n      }]},\n      isLoading: false\n      }\n    )\n  }\n\n  render() {\n    var {users} = this.state;\n    \n    if (!this.state.isLoading) {\n    return(\n      <div>\n        <Container fluid>\n          <Row>\n            <Col xs={8}>\n              <HighChartsReact Highcharts='highcharts' options={this.state.chartOptions} />\n            </Col>\n            <Col xs={4}>\n              <Card bg=\"Light\">\n                <Card.Header>\n                  TESTING FUNCTION\n                </Card.Header>\n                <Card.Text>\n                    <ul>\n                      {users.map(user => (\n                        <li key={user.id}>\n                          Name: {user.name}\n                       </li>\n                      ))}\n                    </ul>\n                </Card.Text>\n                <Card.Body>\n                  <Button variant='warning' onClick={() => this.handleClickRand1()}>rand1</Button>\n                  <Button variant='warning' onClick={() => this.handleClickRand2()}>rand2</Button>\n                  <Button variant='success' onClick={() => this.handleClickDefault()}>default</Button>\n                  <Button variant='primary' onClick={() => this.handleClickLoad()}>load</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to='/'>Home</Link>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col xs={8}>\n              <HighChartsReact Highcharts='highcharts' options={this.state.chartOptions} />\n            </Col>\n            <Col xs={4}>\n              <Card bg=\"Light\">\n                <Card.Header>\n                  TESTING FUNCTION\n                </Card.Header>\n                <Card.Text>\n                    Press load button to see something here\n                </Card.Text>\n                <Card.Body>\n                  <Button variant='warning' onClick={() => this.handleClickRand1()}>rand1</Button>\n                  <Button variant='warning' onClick={() => this.handleClickRand2()}>rand2</Button>\n                  <Button variant='success' onClick={() => this.handleClickDefault()}>default</Button>\n                  <Button variant='primary' onClick={() => this.handleClickLoad()}>load</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to='/'>Home</Link>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\n}\n\n export default Fault2;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Front from './Front'\nimport Fault from './Fault'\nimport Fault2 from './Fault2'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Front} />\n          <Route exact path=\"/fault\" component={Fault} />\n          <Route exact path=\"/fault2\" component={Fault2} />\n          <Route exact path=\"/404\" component={NotFound} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h3>404 NOT FOUND</h3>\n        <Link to=\"/\">Click me to go back to homepage</Link>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}